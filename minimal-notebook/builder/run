#!/bin/bash

set -eo pipefail

set -x

# Generate htdigest password file for webdav access if it doesn't exist.

JUPYTER_ENABLE_WEBDAV=${JUPYTER_ENABLE_WEBDAV:-false}

export JUPYTER_ENABLE_WEBDAV

if [ -f /var/run/secrets/kubernetes.io/serviceaccount/namespace ]; then
    DEPLOYMENT=`echo $HOSTNAME | sed -e 's/^\(.*\)-[^-]*-[^-]*$/\1/'`
    NAMESPACE=`cat /var/run/secrets/kubernetes.io/serviceaccount/namespace`
    WEBDAV_REALM=$NAMESPACE/$DEPLOYMENT
else
    WEBDAV_REALM=jupyter-on-openshift/jupyter-notebooks
fi

WEBDAV_USERFILE=/opt/app-root/etc/webdav.htdigest

export WEBDAV_REALM
export WEBDAV_USERFILE

if [ ! -f $WEBDAV_USERFILE ]; then
    touch $WEBDAV_USERFILE
    if [[ ! -z "${JUPYTER_NOTEBOOK_PASSWORD}" ]]; then
        DIGEST="$( printf "%s:%s:%s" "jupyter" "$WEBDAV_REALM" "$JUPYTER_NOTEBOOK_PASSWORD" | md5sum | awk '{print $1}' )"
        printf "%s:%s:%s\n" "jupyter" "$WEBDAV_REALM" "$DIGEST" >> $WEBDAV_USERFILE
    fi
fi

# Start the Jupyter notebook instance. Run using supervisord if enabled,
# or it is required by webdav access.

if [ x"$JUPYTER_ENABLE_WEBDAV" == x"true" ]; then
    JUPYTER_ENABLE_SUPERVISORD=true
fi

if [[ ! -z "${JUPYTER_ENABLE_SUPERVISORD}" ]]; then
    # Startup supervisord against the configuration and keep it in the
    # foreground so becomes process ID 1 for the container.

    exec /opt/app-root/bin/supervisord --nodaemon \
        --configuration /opt/app-root/etc/supervisord.conf
else
    . /opt/app-root/bin/start-notebook.sh "$@"
fi

# Create a headless service for the driver
export NAMESPACE=`cat /var/run/secrets/kubernetes.io/serviceaccount/namespace`
export POD_UID=`oc get pod ${HOSTNAME} -o jsonpath='{.metadata.uid}'`
export USER=`oc get pod ${HOSTNAME} -o jsonpath='{.metadata.labels.user}'`

sed -i -e "s/USERNAME/${USER}/g" /opt/app-root/builder/spark-bootstrap/headless-service-for-driver.yaml
sed -i -e "s/HOSTNAME/${HOSTNAME}/g" /opt/app-root/builder/spark-bootstrap/headless-service-for-driver.yaml
sed -i -e "s/NAMESPACE/${NAMESPACE}/g" /opt/app-root/builder/spark-bootstrap/headless-service-for-driver.yaml
sed -i -e "s/UID/${POD_UID}/g" /opt/app-root/builder/spark-bootstrap/headless-service-for-driver.yaml


oc apply -f /opt/app-root/builder/spark-bootstrap/headless-service-for-driver.yaml
